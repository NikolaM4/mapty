{"mappings":"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","sources":["script.js"],"sourcesContent":["'use strict';\n\nconst form = document.querySelector('.form');\nconst containerWorkouts = document.querySelector('.workouts');\nconst inputType = document.querySelector('.form__input--type');\nconst inputDistance = document.querySelector('.form__input--distance');\nconst inputDuration = document.querySelector('.form__input--duration');\nconst inputCadence = document.querySelector('.form__input--cadence');\nconst inputElevation = document.querySelector('.form__input--elevation');\n\nclass Workout {\n  date = new Date();\n  id = (Date.now() + '').slice(-10);\n  clicks = 0;\n\n  constructor(coords, distance, duration) {\n    this.coords = coords; // [lat, lng]\n    this.distance = distance; // in km\n    this.duration = duration; // in min\n  }\n\n  _setDescription() {\n    // prettier-ignore\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n    this.description = `${this.type[0].toUpperCase()}${this.type.slice(1)} on ${\n      months[this.date.getMonth()]\n    } ${this.date.getDate()}`;\n  }\n\n  click() {\n    this.clicks++;\n  }\n}\n\nclass Running extends Workout {\n  type = 'running';\n  constructor(coords, distance, duration, cadence) {\n    super(coords, distance, duration);\n    this.cadence = cadence;\n    this.calcPace();\n    this._setDescription();\n  }\n\n  calcPace() {\n    // min/km\n    this.pace = this.duration / this.distance;\n    return this.pace;\n  }\n}\nclass Cycling extends Workout {\n  type = 'cycling';\n  constructor(coords, distance, duration, elevationGain) {\n    super(coords, distance, duration);\n    this.elevationGain = elevationGain;\n    this.calcSpeed();\n    this._setDescription();\n  }\n\n  calcSpeed() {\n    // km/h\n    this.speed = (this.distance / (this.duration / 60)).toFixed(2);\n    return +this.speed;\n  }\n}\n\n//////////////////////////////////\n// APPLICATION ARCHITECTURE\nclass App {\n  #map;\n  #mapZoomLevel = 13;\n  #mapEvent;\n  #workouts = [];\n\n  constructor() {\n    // Get user's position\n    this._getPosition();\n\n    // Get data from local storate\n    this._getLocalStorage();\n\n    // Attach event listeners\n    form.addEventListener('submit', this._newWorkout.bind(this));\n    inputType.addEventListener('change', this._toggleElevationField);\n    containerWorkouts.addEventListener('click', this._moveToPopup.bind(this));\n  }\n\n  _getPosition() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        this._loadMap.bind(this),\n        function () {\n          alert('Could not get your position');\n        }\n      );\n    }\n  }\n\n  _loadMap(position) {\n    const { latitude } = position.coords;\n    const { longitude } = position.coords;\n    console.log(`https://www.google.com/maps/@${latitude},${longitude}`);\n\n    const coords = [latitude, longitude];\n    this.#map = L.map('map').setView(coords, this.#mapZoomLevel);\n    // console.log(map);\n\n    L.tileLayer('https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', {\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(this.#map);\n\n    // Handling clicks on map\n    this.#map.on('click', this._showForm.bind(this));\n\n    this.#workouts.forEach(work => {\n      this._renderWorkoutMarker(work);\n    });\n  }\n\n  _showForm(mapE) {\n    this.#mapEvent = mapE;\n    form.classList.remove('hidden');\n    inputDistance.focus();\n  }\n\n  _hideForm() {\n    // Empty inputs\n    inputDistance.value =\n      inputDuration.value =\n      inputCadence.value =\n      inputElevation.value =\n        '';\n    form.style.display = 'none';\n    form.classList.add('hidden');\n    setTimeout(() => (form.style.display = 'grid'), 1000);\n  }\n\n  _toggleElevationField() {\n    inputElevation.closest('.form__row').classList.toggle('form__row--hidden');\n    inputCadence.closest('.form__row').classList.toggle('form__row--hidden');\n  }\n\n  _newWorkout(e) {\n    const validInputs = (...inputs) =>\n      inputs.every(inp => Number.isFinite(inp));\n\n    const allPositive = (...inputs) => inputs.every(inp => inp > 0);\n\n    e.preventDefault();\n\n    // Get data from form\n    const type = inputType.value;\n    const distance = +inputDistance.value;\n    const duration = +inputDuration.value;\n    const { lat, lng } = this.#mapEvent.latlng;\n    let workout;\n\n    // If workout running, create running object\n    if (type === 'running') {\n      const cadence = +inputCadence.value;\n      // Check if data is valid\n      if (\n        // !Number.isFinite(distance) ||\n        // !Number.isFinite(duration) ||\n        // !Number.isFinite(cadence)\n        !validInputs(distance, duration, cadence) ||\n        !allPositive(distance, duration, cadence)\n      )\n        return alert('Inputs have to be positive numbers!');\n      workout = new Running([lat, lng], distance, duration, cadence);\n    }\n\n    // If workout cycling, create cycling object\n\n    if (type === 'cycling') {\n      const elevation = +inputElevation.value;\n\n      // Check if data is valid\n      if (\n        !validInputs(distance, duration, elevation) ||\n        !allPositive(distance, duration)\n      )\n        return alert('Inputs have to be positive numbers!');\n      workout = new Cycling([lat, lng], distance, duration, elevation);\n    }\n    // Add new object to workout array\n    this.#workouts.push(workout);\n\n    // Render workout on map as marker\n    this._renderWorkoutMarker(workout);\n\n    // Render workout on list\n    this._renderWorkout(workout);\n\n    // Hide form +Clear input fields\n    this._hideForm();\n\n    // Set local storage to all workouts\n    this._setLocalStorage();\n  }\n\n  _renderWorkoutMarker(workout) {\n    L.marker(workout.coords)\n      .addTo(this.#map)\n      .bindPopup(\n        L.popup({\n          maxWidth: 250,\n          minWidth: 100,\n          autoClose: false,\n          closeOnClick: false,\n          className: `${workout.type}-popup`,\n        })\n      )\n      .setPopupContent(\n        `${workout.type === 'running' ? '🏃‍♂️' : '🚴‍♀️'} ${workout.description}`\n      )\n      .openPopup();\n  }\n\n  _renderWorkout(workout) {\n    let html = `\n        <li class=\"workout workout--${workout.type}\" data-id=\"${workout.id}\">\n          <h2 class=\"workout__title\">${workout.description}</h2>\n          <div class=\"workout__details\">\n            <span class=\"workout__icon\">${\n              workout.type === 'running' ? '🏃‍♂️' : '🚴‍♀️'\n            }</span>\n            <span class=\"workout__value\">${workout.distance}</span>\n            <span class=\"workout__unit\">km</span>\n          </div>\n          <div class=\"workout__details\">\n            <span class=\"workout__icon\">⏱</span>\n            <span class=\"workout__value\">${workout.duration}</span>\n            <span class=\"workout__unit\">min</span>\n          </div>\n    `;\n\n    if (workout.type === 'running') {\n      html += `\n          <div class=\"workout__details\">\n            <span class=\"workout__icon\">⚡️</span>\n            <span class=\"workout__value\">${workout.pace.toFixed(1)}</span>\n            <span class=\"workout__unit\">min/km</span>\n          </div>\n          <div class=\"workout__details\">\n            <span class=\"workout__icon\">🦶🏼</span>\n            <span class=\"workout__value\">${workout.cadence}</span>\n            <span class=\"workout__unit\">spm</span>\n          </div>\n        </li>\n        `;\n    }\n\n    if (workout.type === 'cycling') {\n      html += `\n          <div class=\"workout__details\">\n            <span class=\"workout__icon\">⚡️</span>\n            <span class=\"workout__value\">${workout.speed}</span>\n            <span class=\"workout__unit\">km/h</span>\n          </div>\n          <div class=\"workout__details\">\n            <span class=\"workout__icon\">⛰</span>\n            <span class=\"workout__value\">${workout.elevationGain}</span>\n            <span class=\"workout__unit\">m</span>\n          </div>\n        </li>\n        `;\n    }\n    form.insertAdjacentHTML('afterend', html);\n  }\n\n  _moveToPopup(e) {\n    const workoutEl = e.target.closest('.workout');\n\n    if (!workoutEl) return;\n\n    const workout = this.#workouts.find(\n      work => work.id === workoutEl.dataset.id\n    );\n\n    this.#map.setView(workout.coords, this.#mapZoomLevel, {\n      animate: true,\n      pan: {\n        duration: 1,\n      },\n    });\n\n    // using the public interface\n    // workout.click();\n  }\n\n  _setLocalStorage() {\n    localStorage.setItem('workouts', JSON.stringify(this.#workouts));\n  }\n  _getLocalStorage() {\n    const data = JSON.parse(localStorage.getItem('workouts'));\n\n    if (!data) return;\n\n    this.#workouts = data;\n\n    this.#workouts.forEach(work => {\n      this._renderWorkout(work);\n    });\n  }\n\n  reset() {\n    localStorage.removeItem('workouts');\n    location.reload();\n  }\n}\n\nconst app = new App();\n"],"names":["form","document","querySelector","containerWorkouts","inputType","inputDistance","inputDuration","inputCadence","inputElevation","Workout","date","Date","id","now","slice","clicks","constructor","coords","distance","duration","this","_setDescription","description","type","toUpperCase","getMonth","getDate","click","Running","cadence","super","calcPace","pace","Cycling","elevationGain","calcSpeed","speed","toFixed","App","map","mapZoomLevel","mapEvent","workouts","_getPosition","_getLocalStorage","addEventListener","_newWorkout","bind","_toggleElevationField","_moveToPopup","navigator","geolocation","getCurrentPosition","_loadMap","alert","position","latitude","longitude","console","log","L","setView","tileLayer","attribution","addTo","on","_showForm","forEach","work","_renderWorkoutMarker","mapE","classList","remove","focus","_hideForm","value","style","display","add","setTimeout","closest","toggle","e","validInputs","inputs","every","inp","Number","isFinite","allPositive","preventDefault","lat","lng","latlng","workout","elevation","push","_renderWorkout","_setLocalStorage","marker","bindPopup","popup","maxWidth","minWidth","autoClose","closeOnClick","className","setPopupContent","openPopup","html","insertAdjacentHTML","workoutEl","target","find","dataset","animate","pan","localStorage","setItem","JSON","stringify","data","parse","getItem","reset","removeItem","location","reload","app"],"version":3,"file":"index.79cb54a1.js.map"}